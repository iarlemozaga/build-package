name: Build Package

# Controls when the workflow will run
on:
  repository_dispatch:
    types: [*]

  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'With TMATE'
        required: false
        default: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: echo PayLoads
        run: |
          echo "url: ${{ github.event.client_payload.url }}"
          echo "branch: ${{ github.event.client_payload.branch }}"
          echo "extrarepo: ${{ github.event.client_payload.extrarepo }}"
          echo "branch_build: ${{ github.event.client_payload.branch_build }}"
          echo "new branch_build: ${{ env.branch_build }}"
          
      - name: Makepkg Build and Check
        id: makepkg
        # You may pin to the exact commit or the version.
        uses: iarlemozaga/build-package@main
        with:
          package: pkgbuild
          branch: stable
          gitbranch: ${{ github.event.client_payload.branch }}
          gpg-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.PASSPHRASE }}
          tmate: ${{ inputs.debug_enabled }}
          repo-mirror: repo
          
      # # Tmate ##
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3
        
      - name: Publish Package on GitHub
        shell: bash -O extglob {0}
        env:
          URL: ${{ github.event.client_payload.url }}
          BRANCH: ${{ github.event.client_payload.branch }}
        run: |
          gitfolder=$(find -type f -name PKGBUILD | sed 's/PKGBUILD//')
          cd $gitfolder
          ls -lh
          
          #Release#
          source PKGBUILD
          release=${pkgname}-${pkgver}-${pkgrel}             
          
          echo ${{ github.token }} | gh auth login --with-token
          repo=${{ github.repository }}
          
          
          gh release create ${release} --title ${release} --repo ${repo} --notes "automated release from $URL" || echo "release already exists"
          GITHUB_LINK=https://github.com/${repo}/releases/download/${release}
          for i in .zst .sig .tar .md5; do
            find -iname "*$i" -exec gh release upload ${release} --repo ${repo} --clobber {} \;
          done
          
      
      - name: Telegram Alert Fail
        # if: ${{ failure() || cancelled() }}
        if: ${{ failure() }}
        run: |
          curl -X POST -H 'Content-Type: application/json' -d '{"chat_id": "${{ secrets.CHAT_ID }}", "text": "ðŸš¨ FALHA ao criar Pacote: ${{ github.event.action }} a partir do branch ${{ github.ref_name }}, link do erro: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} ðŸ–¥", "disable_notification": false}' ${{ secrets.MESSAGE_BOT_KEY }}
          
        ## Tmate ##
      #- name: Setup tmate session
      #  uses: mxschmitt/action-tmate@v3 
        
